{"version":3,"sources":["serviceWorker.js","context.js","Top.js","Home.js","About.js","Help.js","Creators.js","Analysts.js","Home2.js","CampaignDetail.js","App.js","context-provider.js","index.js","Media/gsLogo.png"],"names":["Boolean","window","location","hostname","match","AppContext","React","createContext","Top","props","Navbar","bg","variant","expand","to","Brand","alt","style","width","marginLeft","src","Favicon","id","Nav","fontSize","color","textDecoration","Home","className","textAlign","paddingTop","textShadow","About","Container","Row","noGutters","Col","Help","Creators","height","CreatorsController","useState","responseState","setResponseState","initialValues","title","description","category_id","goal","currencycode","days_active","has_beneficiary","visible_in_search","is_charity","validateOnChange","validateOnBlur","validate","values","errors","onSubmit","a","async","axios","post","JSON","stringify","response","data","result","form","CreatorsForm","marginRight","Header","padding","disabled","isSubmitting","name","type","md","size","animation","parseFloat","toFixed","Input","rProps","Group","Label","Control","placeholder","field","meta","touched","error","InputDesc","as","rows","InputDropDownCur","value","InputDropDownCat","InputCheckBox","Analysts","AnalystsController","goal_min","goal_max","donators_max","donators_min","score","donators","current_amount_max","current_amount_min","current_amount","asc_desc","order_by","my_search","AnalystsForm","step2State","setStep2State","backgroundColor","defaultValue","onChange","e","target","undefined","striped","bordered","hover","Object","map","p","key","campaign_id","InputDropdown","InputDropdown2","marginTop","marginBottom","alignContent","Campaign_Detail","useRouteMatch","useEffect","params","campaign","fetchData","currency","url","campaign_image_url","ssTotal","social_share_total","daysActive","hearts","campaign_hearts","isCharity","currentAmount","state","progress","Card","Img","Body","ProgressBar","now","label","App","fluid","nogutters","path","AppProvider","actions","addToCart","removeFromCart","getCartTotal","clearCart","categories","products","cart","Provider","this","Component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.d698b2d1.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\n\r\nconst AppContext = React.createContext()\r\nexport default AppContext\r\n","import React from \"react\"\r\nimport { Navbar, Nav } from 'react-bootstrap'\r\nimport { Link } from \"react-router-dom\";\r\nimport Favicon from \"./Media/gsLogo.png\"\r\n\r\nexport default function Top(props){\r\n\r\n    return(\r\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n            <Link to=\"/\">\r\n                <Navbar.Brand><img alt=\"mountain logo\" style={{ width: \"60px\", marginLeft:\"20px\"}}src={Favicon} id=\"logo\"></img></Navbar.Brand>\r\n            </Link>\r\n            <Nav>\r\n               <Link to=\"\" style={{ fontSize: \"1.5rem\", color: \"white\", textDecoration: \"none\", marginLeft:\"10px\" }}>Gane Sarson Consulting</Link>\r\n            </Nav>\r\n\r\n        </Navbar>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport default function Home() {\r\n\r\n    return (\r\n      <>\r\n      <div className='home-background' style={{textAlign:\"center\"}}>\r\n\r\n      <h1 style={{color:\"white\", paddingTop: \"15%\", fontSize:\"4.5rem\", textShadow:\"1px 1px 10px #444444\"}}><b>We're Here To Help</b> <i>You</i> <b>Help Others</b></h1>\r\n      <h1 style={{color:\"white\", paddingTop: \"1%\", fontSize:\"2rem\", textShadow:\"1px 1px 10px #222222\"}}><b>Together we can help those affected with COVID 19</b></h1>\r\n\r\n      <h1 style={{color:\"white\", paddingTop: \"10%\", fontSize:\"3rem\", textShadow:\"1px 1px 10px #222222\"}}>Here's How</h1>\r\n      <i style={{color:\"white\", fontSize:\"3rem\"}} className=\"fa fa-chevron-circle-down\"></i>\r\n\r\n      </div>\r\n\r\n      </>\r\n    );\r\n  }","import React from \"react\";\r\nimport { Container, Col, Row } from \"react-bootstrap\"\r\n\r\nexport default function About() {\r\n    return (\r\n      <Container>\r\n          <Row noGutters>\r\n              <Col>\r\n                    <h1>About</h1>\r\n              </Col>\r\n          </Row>\r\n          <Row noGutters>\r\n              <Col>\r\n                Laboris laboris officia ut pariatur ad. Eu tempor amet esse incididunt consectetur exercitation voluptate culpa. Proident exercitation id duis aute sunt ea adipisicing consectetur excepteur mollit aute excepteur ipsum. Et ex do pariatur ad.\r\n              </Col>\r\n          </Row>\r\n      </Container>\r\n    );\r\n  }","import React from \"react\";\r\nimport { Container, Col, Row } from \"react-bootstrap\"\r\n\r\nexport default function Help() {\r\n    return (\r\n      <Container>\r\n          <Row noGutters>\r\n              <Col>\r\n                    <h1>Help</h1>\r\n              </Col>\r\n          </Row>\r\n          <Row noGutters>\r\n              <Col>\r\n                We are here to help. Id ad irure sunt consectetur elit incididunt officia consequat. Voluptate in ea reprehenderit ea eiusmod aliquip mollit irure deserunt in. Dolore esse est exercitation amet nisi magna.\r\n              </Col>\r\n          </Row>\r\n      </Container>\r\n    );\r\n  }","import React, { useState } from 'react';\r\nimport * as bs from 'react-bootstrap'\r\nimport { Formik, Form, Field } from 'formik'\r\nimport axios from 'axios'\r\n\r\n\r\nfunction Creators(props) {\r\n\r\n    return (\r\n        <>\r\n            <CreatorsController />\r\n            <div style={{height:\"300px\"}}></div>\r\n        </>\r\n    )\r\n}\r\nexport default Creators\r\n\r\n\r\n\r\nconst CreatorsController = props => {\r\n\r\n    const [responseState, setResponseState] = useState(0);\r\n\r\n    return (\r\n\r\n        <Formik\r\n        initialValues={{\r\n            title: '',\r\n            description: \"\",\r\n            category_id: '',\r\n            goal: '',\r\n            currencycode: '',\r\n            days_active: '',\r\n            has_beneficiary: '',\r\n            visible_in_search: '',\r\n            is_charity: '',\r\n        }}\r\n            validateOnChange={false}\r\n            validateOnBlur={false}\r\n            validate={values => {\r\n                const errors = {}\r\n                if (!values.title) {\r\n                    errors.title = \"Please enter a title\"\r\n                }\r\n                // if (values.title) {\r\n                //     errors.title = \"Please enter a title\"\r\n                // }\r\n                if (!values.description) {\r\n                    errors.description = \"Please enter an description\"\r\n                }\r\n                if (!values.category_id) {\r\n                    errors.category_id = \"Please enter a category\"\r\n                }\r\n                if (!values.goal) {\r\n                    errors.goal = \"Please enter a goal\"\r\n                }\r\n                if (!values.currencycode) {\r\n                    errors.currencycode = \"Please enter a currency\"\r\n                }\r\n                if (!values.days_active) {\r\n                    errors.days_active = \"Please enter a value\"\r\n                }\r\n                if (!values.visible_in_search) {\r\n                    errors.visible_in_search = \"Please enter a value\"\r\n                }\r\n                if (!values.has_beneficiary) {\r\n                    errors.has_beneficiary = \"Please enter a value\"\r\n                }\r\n                if (!values.is_charity) {\r\n                    errors.is_charity = \"Please enter a value\"\r\n                }\r\n                return errors\r\n            }}\r\n            onSubmit={async (values) => {\r\n\r\n                //console.log(JSON.stringify(values))\r\n                //const response = await axios.post('http://18.222.137.188:8000/api/results', JSON.stringify(values))\r\n                const response = await axios.post('http://localhost:8000/api/results', JSON.stringify(values))\r\n                //console.log(response.data.result[0][13])\r\n\r\n                setResponseState(response.data.result[0][13])\r\n\r\n                \r\n\r\n            }}\r\n\r\n\r\n        >{form => (\r\n            <CreatorsForm response={responseState} form={form}/>\r\n        )}</Formik>\r\n    )\r\n\r\n}\r\n\r\n\r\n/**\r\n * The form layout/html.\r\n * This component needs finishing.\r\n */\r\nconst CreatorsForm = props => {\r\n\r\n    return (\r\n        <div className='creator-background'>\r\n            <Form>\r\n                <br></br><h1 style={{ color: \"white\", textAlign: \"center\" }}>Create A Campaign</h1><br />\r\n\r\n                <bs.Card style={{ width: \"60%\", marginLeft: \"20%\", marginRight: \"20\" }}>\r\n                    <bs.Card.Header>\r\n                        <h6>Enter Info To See Our Estimate of Earned Amount</h6>\r\n                    </bs.Card.Header>\r\n                    <div style={{ padding: \"15px\" }}>\r\n                        <Input disabled={props.form.isSubmitting} title=\"Campaign Title:\" name=\"title\" type=\"text\" />\r\n                        <InputDesc disabled={props.form.isSubmitting} title=\"Campaign Description:\" name=\"description\" type=\"text\" />\r\n                        <InputDropDownCat disabled={props.form.isSubmitting} title=\"Category:\" name=\"category_id\" type=\"dropdown\" />\r\n                        <bs.Row>\r\n                            <bs.Col md=\"6\">\r\n                                <Input disabled={props.form.isSubmitting} title=\" Campaign Goal:\" name=\"goal\" type=\"text\" />\r\n                            </bs.Col>\r\n                            <bs.Col md=\"6\">\r\n                                <InputDropDownCur disabled={props.form.isSubmitting} title=\"Currency:\" name=\"currencycode\" type=\"text\" />\r\n                            </bs.Col>\r\n                        </bs.Row>\r\n                        <Input disabled={props.form.isSubmitting} title=\"Days Campaign Has Been Active:\" name=\"days_active\" type=\"text\" />\r\n                        <bs.Row>\r\n                            <bs.Col md=\"4\">\r\n                                <InputCheckBox disabled={props.form.isSubmitting} title=\"Has Beneficiary:\" name=\"has_beneficiary\" type=\"text\" />\r\n                            </bs.Col>\r\n                            <bs.Col md=\"4\">\r\n                                <InputCheckBox disabled={props.form.isSubmitting} title=\"Visible In Search:\" name=\"visible_in_search\" type=\"text\" />\r\n                            </bs.Col>\r\n                            <bs.Col md=\"4\">\r\n                                <InputCheckBox disabled={props.form.isSubmitting} title=\"Is Charity:\" name=\"is_charity\" type=\"text\" />\r\n                            </bs.Col>\r\n                        </bs.Row>\r\n\r\n                        <bs.Button disabled={props.form.isSubmitting} type=\"submit\">Submit {props.form.isSubmitting && <bs.Spinner size=\"sm\" animation=\"border\"></bs.Spinner>}</bs.Button>\r\n                        <br/><br/>\r\n                        {props.response !== 0 && <h3>Estimated Amount: ${(parseFloat(props.response)).toFixed(2)}</h3>}\r\n                    </div>\r\n                </bs.Card>\r\n                <br />\r\n\r\n            </Form></div>)\r\n}\r\n\r\n\r\n/**\r\n * A form input.\r\n *   props.title - the title that shows above the input box\r\n *   props.type - the type of input (see React Bootstrap Form.Control)\r\n *   props.placeholder - placeholder text in the input.\r\n * This component is finished and doesn't need additional work.\r\n */\r\nconst Input = (props) => (\r\n    <Field name={props.name}>{rProps => (\r\n        <bs.Form.Group>\r\n            {props.title &&\r\n                <bs.Form.Label>{props.title}</bs.Form.Label>\r\n            }\r\n            <bs.Form.Control\r\n                type={props.type}\r\n                placeholder={props.placeholder}\r\n                disabled={props.disabled}\r\n                name={props.name}\r\n                {...rProps.field}\r\n            />\r\n            {rProps.meta.touched && rProps.meta.error &&\r\n                <div className=\"text-danger\">{rProps.meta.error}</div>\r\n            }\r\n        </bs.Form.Group>\r\n    )}</Field>\r\n)\r\n\r\nconst InputDesc = (props) => (\r\n    <Field name={props.name}>{rProps => (\r\n        <bs.Form.Group>\r\n            {props.title &&\r\n                <bs.Form.Label>{props.title}</bs.Form.Label>\r\n            }\r\n            <bs.Form.Control as=\"textarea\" rows=\"3\" \r\n                type={props.type}\r\n                placeholder={props.placeholder}\r\n                disabled={props.disabled}\r\n                {...rProps.field}\r\n            />\r\n            {rProps.meta.touched && rProps.meta.error &&\r\n                <div className=\"text-danger\">{rProps.meta.error}</div>\r\n            }\r\n        </bs.Form.Group>\r\n    )}</Field>\r\n)\r\n\r\nconst InputDropDownCur = (props) => (\r\n    <Field name={props.name}>{rProps => (\r\n        <bs.Form.Group>\r\n            {props.title &&\r\n                <bs.Form.Label>{props.title}</bs.Form.Label>\r\n            }\r\n            <bs.Form.Control as=\"select\"\r\n                type=\"dropdown\"\r\n                placeholder={props.placeholder}\r\n                disabled={props.disabled}\r\n                {...rProps.field}\r\n            >\r\n                <option value=\"\" disabled>Choose...</option>\r\n                <option>USD</option>\r\n                <option>AUD</option>\r\n                <option>CAD</option>\r\n                <option>CHF</option>\r\n                <option>DKK</option>\r\n                <option>EUR</option>\r\n                <option>GBP</option>\r\n                <option>NOK</option>\r\n                <option>SEK</option>\r\n\r\n            </bs.Form.Control>\r\n            {rProps.meta.touched && rProps.meta.error &&\r\n                <div className=\"text-danger\">{rProps.meta.error}</div>\r\n            }\r\n        </bs.Form.Group>\r\n    )}</Field>\r\n)\r\n\r\nconst InputDropDownCat = (props) => (\r\n    <Field name={props.name}>{rProps => (\r\n        <bs.Form.Group>\r\n            {props.title &&\r\n                <bs.Form.Label>{props.title}</bs.Form.Label>\r\n            }\r\n            <bs.Form.Control as=\"select\"\r\n                type=\"dropdown\"\r\n                placeholder={props.placeholder}\r\n                disabled={props.disabled}\r\n                {...rProps.field}\r\n            >\r\n                <option value=\"\" disabled>Choose...</option>\r\n                <option value=\"2\">Accidents & Emergencies</option>\r\n                <option value=\"3\">Animals & Pets</option>\r\n                <option value=\"4\">Babies Kids & Family</option>\r\n                <option value=\"5\">Business & Entrepreneurs</option>\r\n                <option value=\"6\">Celebrations & Events</option>\r\n                <option value=\"7\">Community & Neighbors</option>\r\n                <option value=\"8\">Artists</option>\r\n                <option value=\"9\">Funerals & Memorials</option>\r\n                <option value=\"10\">Travel</option>\r\n                <option value=\"11\">Medical Illness & Healing</option>\r\n                <option value=\"12\">Faith</option>\r\n                <option value=\"13\">Non-Profits & Charities</option>\r\n                <option value=\"14\">Weddings</option>\r\n                <option value=\"16\">Sports Teams & Clubs</option>\r\n                <option value=\"17\">Education & Learning</option>\r\n                <option value=\"18\">Volunteer</option>\r\n                <option value=\"19\">Competition</option>\r\n                <option value=\"20\">Dreams Hopes & Wishes</option>\r\n                <option value=\"15\">Other</option>\r\n            </bs.Form.Control>\r\n            {rProps.meta.touched && rProps.meta.error &&\r\n                <div className=\"text-danger\">{rProps.meta.error}</div>\r\n            }\r\n        </bs.Form.Group>\r\n    )}</Field>\r\n)\r\n\r\nconst InputCheckBox = (props) => (\r\n    <Field name={props.name}>{rProps => (\r\n        <bs.Form.Group>\r\n            {props.title &&\r\n                <bs.Form.Label>{props.title}</bs.Form.Label>\r\n            }\r\n            <bs.Form.Control as=\"select\"\r\n                type=\"dropdown\"\r\n                placeholder={props.placeholder}\r\n                disabled={props.disabled}\r\n                {...rProps.field}\r\n            >\r\n                <option value=\"\" disabled>Choose...</option>\r\n                <option value=\"TRUE\">Yes</option>\r\n                <option value=\"FALSE\">No</option>\r\n            </bs.Form.Control>\r\n            {rProps.meta.touched && rProps.meta.error &&\r\n                <div className=\"text-danger\">{rProps.meta.error}</div>\r\n            }\r\n        </bs.Form.Group>\r\n    )}</Field>\r\n)","import React, { useState } from 'react';\r\nimport * as bs from 'react-bootstrap'\r\nimport { Formik, Form, Field } from 'formik'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nfunction Analysts(props) {\r\n\r\n\r\n    return (\r\n        <>\r\n            <AnalystsController />\r\n            <br></br>\r\n            <div style={{ height: \"300px\" }}></div>\r\n        </>\r\n    )\r\n}\r\nexport default Analysts\r\n\r\nconst AnalystsController = props => {\r\n\r\n    const [responseState, setResponseState] = useState({});\r\n\r\n    return (\r\n\r\n        <Formik\r\n            initialValues={{\r\n                goal: \"\",\r\n                description: \"\",\r\n                goal_min: \"\",\r\n                goal_max: \"\",\r\n                donators_max: \"\",\r\n                donators_min: \"\",\r\n                title: \"\",\r\n                score: \"\",\r\n                donators: \"\",\r\n                current_amount_max: \"\",\r\n                current_amount_min: \"\",\r\n                current_amount: \"\",\r\n                currencycode: \"\",\r\n                asc_desc: \"\",\r\n                order_by: \"\"\r\n            }}\r\n            validateOnChange={false}\r\n            validateOnBlur={false}\r\n            // validate={values => {\r\n            //     const errors = {}\r\n            //     if (!values.title) {\r\n            //         errors.title = \"Please enter something to search\"\r\n            //     }\r\n            //     if (!values.description) {\r\n            //         errors.descritipion = \"Please enter something to search\"\r\n            //     }\r\n            //     if (!values.goal) {\r\n            //         errors.goal = \"Please enter a goal\"\r\n            //     }\r\n            //     if (!values.goal_min) {\r\n            //         errors.goal_min = \"Please enter a minimum goal\"\r\n            //     }\r\n            //     if (!values.goal_max) {\r\n            //         errors.goal_max = \"Please enter a maximum goal\"\r\n            //     }\r\n            //     return errors\r\n            // }}\r\n            onSubmit={async (values) => {\r\n\r\n                setResponseState({})\r\n\r\n                //console.log(step2State.value)\r\n\r\n                //const response = await axios.get('http://ec2-13-58-78-104.us-east-2.compute.amazonaws.com:8000/api/search', JSON.stringify(values))\r\n                const response = await axios.post('http://localhost:8000/api/search', JSON.stringify(values))\r\n\r\n                setResponseState(response.data.my_search)\r\n            }}\r\n\r\n\r\n        >{form => (\r\n            <AnalystsForm response={responseState} form={form} />\r\n        )}</Formik>\r\n    )\r\n\r\n}\r\n\r\nconst AnalystsForm = props => {\r\n\r\n    const [step2State, setStep2State] = useState(\"\");\r\n\r\n    return (\r\n        <div className='analysts-background'>\r\n            <Form>\r\n                <br></br><h1 style={{ color: \"white\", textAlign: \"center\" }}>Find A Campaign</h1><br />\r\n\r\n                <bs.Card style={{ width: \"80%\", marginLeft: \"10%\", marginRight: \"1x0\" }}>\r\n                    <bs.Card.Header>\r\n                        <h3>Search</h3>\r\n                    </bs.Card.Header>\r\n                    <div style={{ padding: \"15px\" }}>\r\n                        <bs.Row>\r\n                            <bs.Col md=\"3\">\r\n                                <h6>Select Feature To Search</h6>\r\n                                <select style={{height:\"40px\", backgroundColor:\"white\"}} defaultValue=\"choose\" onChange={(e) => setStep2State({ value: e.target.value })}>\r\n                                    <option disabled value=\"choose\">Choose...</option>\r\n                                    <option value=\"title\">Title</option>\r\n                                    <option value=\"goal\">Goal Amount</option>\r\n                                    <option value=\"donators\">Number of Donators</option>\r\n                                    <option value=\"current_amount\">Current Amount Raised</option>\r\n                                    <option value=\"currencycode\">Currency Code</option>\r\n                                </select>\r\n                            </bs.Col>\r\n\r\n                            {(step2State.value === \"title\" || step2State.value === \"currencycode\") ?\r\n                                <bs.Col md=\"4\">\r\n                                    <Input disabled={props.form.isSubmitting} title=\"Search for:\" id=\"searchBox\" name={step2State.value} type=\"text\" />\r\n                                </bs.Col> : null\r\n                            }\r\n\r\n                            {(step2State.value === \"goal\" || step2State.value === \"donators\" || step2State.value === \"current_amount\" || step2State.value === \"days_active\") ?\r\n                                <>\r\n                                    <bs.Col md=\"3\">\r\n                                        <Input disabled={props.form.isSubmitting} title=\"From (value):\" name={`${step2State.value}_min`} type=\"text\" />\r\n                                    </bs.Col>\r\n\r\n                                    <bs.Col md=\"3\">\r\n                                        <Input disabled={props.form.isSubmitting} title=\"To (value):\" name={`${step2State.value}_max`} type=\"text\" />\r\n                                    </bs.Col>\r\n                                </> : null\r\n                            }\r\n\r\n                        </bs.Row>\r\n                        <br />\r\n                        <bs.Row>\r\n                            <bs.Col md=\"3\">\r\n                                {(step2State.value !== undefined) ?\r\n                                    <InputDropdown name=\"order_by\" title=\"Sort By\"></InputDropdown>:null\r\n                                }\r\n                            </bs.Col>\r\n\r\n                            {(step2State.value !== undefined) ?\r\n                                <bs.Col md=\"3\">\r\n                                    <InputDropdown2 name=\"asc_desc\" title=\"ASC/DESC\"></InputDropdown2>\r\n                                </bs.Col>:null\r\n                            }\r\n\r\n                        </bs.Row>\r\n\r\n\r\n\r\n                        <br />\r\n\r\n                        <bs.Button disabled={props.form.isSubmitting} type=\"submit\">Submit {props.form.isSubmitting && <bs.Spinner size=\"sm\" animation=\"border\"></bs.Spinner>}</bs.Button>\r\n                        <br /><br />\r\n\r\n                        <bs.Table striped bordered hover>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Campaign ID</th>\r\n                                    <th>Title</th>\r\n                                    <th>Goal</th>\r\n                                    <th># of Donators</th>\r\n                                    <th>Current Amount</th>\r\n                                    <th>Currency</th>\r\n                                    <th># of Days Active</th>\r\n                                    <th>Score</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {Object.values(props.response).map((p, key) => {\r\n\r\n                                    return (\r\n                                        <tr key={\"campaign-\" + key}>\r\n                                            <td>{p.campaign_id}</td>\r\n                                            <td>{p.title}</td>\r\n                                            <td>${p.goal}</td>\r\n                                            <td>{p.donators}</td>\r\n                                            <td>${p.current_amount}</td>\r\n                                            <td>{p.currencycode}</td>\r\n                                            <td>{p.days_active}</td>\r\n                                            <td>{p.score}</td>\r\n                                            <td><Link to={`/campaign/${p.campaign_id}`} className=\"btn btn-primary btn-large\">Details</Link></td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n                            </tbody>\r\n                        </bs.Table>\r\n                    </div>\r\n                </bs.Card>\r\n                <br />\r\n\r\n            </Form></div>)\r\n}\r\n\r\n\r\n/**\r\n * A form input.\r\n *   props.title - the title that shows above the input box\r\n *   props.type - the type of input (see React Bootstrap Form.Control)\r\n *   props.placeholder - placeholder text in the input.\r\n * This component is finished and doesn't need additional work.\r\n */\r\nconst Input = (props) => (\r\n    <Field name={props.name}>{rProps => (\r\n        <bs.Form.Group>\r\n            {props.title &&\r\n                <bs.Form.Label>{props.title}</bs.Form.Label>\r\n            }\r\n            <bs.Form.Control\r\n                type={props.type}\r\n                placeholder={props.placeholder}\r\n                disabled={props.disabled}\r\n                name={props.name}\r\n                {...rProps.field}\r\n            />\r\n            {rProps.meta.touched && rProps.meta.error &&\r\n                <div className=\"text-danger\">{rProps.meta.error}</div>\r\n            }\r\n        </bs.Form.Group>\r\n    )}</Field>\r\n)\r\n\r\nconst InputDropdown = (props) => (\r\n    <Field name={props.name}>{rProps => (\r\n        <bs.Form.Group>\r\n            {props.title &&\r\n                <bs.Form.Label>{props.title}</bs.Form.Label>\r\n            }\r\n            <bs.Form.Control as=\"select\"\r\n                type=\"dropdown\"\r\n                placeholder={props.placeholder}\r\n                disabled={props.disabled}\r\n                {...rProps.field}\r\n            >\r\n                <option value=\"\">No Sort</option>\r\n                <option value=\"title\">Title</option>\r\n                <option value=\"goal\">Goal Amount</option>\r\n                <option value=\"donators\">Number of Donators</option>\r\n                <option value=\"current_amount\">Current Amount Raised</option>\r\n                <option value=\"currencycode\">Currency Code</option>\r\n                <option value=\"score\">Score</option>\r\n            </bs.Form.Control>\r\n            {rProps.meta.touched && rProps.meta.error &&\r\n                <div className=\"text-danger\">{rProps.meta.error}</div>\r\n            }\r\n        </bs.Form.Group>\r\n    )}</Field>\r\n)\r\n\r\nconst InputDropdown2 = (props) => (\r\n    <Field name={props.name}>{rProps => (\r\n        <bs.Form.Group>\r\n            {props.title &&\r\n                <bs.Form.Label>{props.title}</bs.Form.Label>\r\n            }\r\n            <bs.Form.Control as=\"select\"\r\n                type=\"dropdown\"\r\n                placeholder={props.placeholder}\r\n                disabled={props.disabled}\r\n                {...rProps.field}\r\n            >\r\n                <option disabled value=\"\">N/A</option>\r\n                <option value=\"ASC\">Ascending</option>\r\n                <option value=\"DESC\">Descending</option>\r\n            </bs.Form.Control>\r\n            {rProps.meta.touched && rProps.meta.error &&\r\n                <div className=\"text-danger\">{rProps.meta.error}</div>\r\n            }\r\n        </bs.Form.Group>\r\n    )}</Field>\r\n)","import React from \"react\";\r\nimport { Container, Col, Row, Button } from \"react-bootstrap\"\r\nimport {Link} from \"react-router-dom\"\r\n\r\nexport default function Home() {\r\n\r\n    return (\r\n      <>\r\n\r\n        <Container style={{marginTop:\"50px\", marginBottom:\"100px\", textAlign:\"center\", alignContent:\"center\"}}>\r\n        <h1 style={{marginTop:\"50px\"}}>What this site offers you</h1>\r\n\r\n        <p style={{marginTop:\"20px\"}}>As you know, GoFundMe has been receiving even more traffic than usual as people scramble to crowdfund for various causes, many of which are related to the recent COVID-19 pandemic. As such, GoFundMe is in serious need of a web application to help manage the flood of new users and campaigns. We have developed a clean, dual-purpose web application that has two main features: projecting the success of hypothetical new campaigns created by GoFundMe end users, and allowing GoFundMe managers and employees to easily search through existing campaigns and find which ones are most successful.\r\n</p>\r\n            <Row style={{textAlign:\"center\", alignContent:\"center\"}}>\r\n                <Col md=\"12\">\r\n                    <h1>Which one are you?</h1><br/>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md=\"12\">\r\n                    <Link to=\"/creators\" className=\"btn btn-large btn-primary\" style={{height:\"60px\", fontSize:\"1.5rem\"}}>Campaign Creator</Link><br/><br />\r\n                    <Link to=\"/analysts\" className=\"btn btn-large btn-warning\" style={{height:\"60px\", fontSize:\"1.5rem\"}}>GoFundMe Management</Link>\r\n                </Col>\r\n            </Row>\r\n\r\n        </Container>\r\n      </>\r\n    );\r\n  }","import React, { useState, useEffect } from 'react';\r\nimport { Container, Col, Row, ProgressBar, Button, Card } from \"react-bootstrap\"\r\nimport {\r\n    useRouteMatch, Link\r\n} from \"react-router-dom\";\r\nimport axios from 'axios'\r\n\r\n\r\n\r\nexport default function Campaign_Detail() {\r\n\r\n    let match = useRouteMatch(\"/campaign/:id\")\r\n\r\n    const [responseState, setResponseState] = useState({});\r\n\r\n      useEffect (() => {\r\n        async function fetchData() {\r\n        const campaign = await axios.post('http://localhost:8000/api/campaign', match.params.id)\r\n        setResponseState(campaign)\r\n        }\r\n\r\n        fetchData();\r\n        \r\n        \r\n                \r\n      },);\r\n    \r\n\r\n\r\n    //console.log(responseState.data !== undefined && responseState.data.result)\r\n\r\n    //let found = context.products[match.params.pid]\r\n\r\n    // if (!found) {\r\n    //     return (\r\n    //         <div style={{ textAlign: \"center\" }}>\r\n    //             <img alt=\"baby yoda\" style={{ width: \"80%\" }} src={BabyYoda}></img>\r\n    //             <h2 style={{ margin: \"5%\" }}>This is not the product you are looking for</h2>\r\n    //             <h3>Product not found</h3>\r\n    //             <br />\r\n    //         </div>\r\n    //     )\r\n    // }\r\n\r\n    const campaign_id = responseState.data !== undefined && responseState.data.result.campaign_id\r\n    const title = responseState.data !== undefined && responseState.data.result.title\r\n    const currency = responseState.data !== undefined && responseState.data.result.currencycode\r\n    const url = responseState.data !== undefined ? responseState.data.result.campaign_image_url: \"\"\r\n    const ssTotal = responseState.data !== undefined && responseState.data.result.social_share_total\r\n    const donators = responseState.data !== undefined && responseState.data.result.donators\r\n    const daysActive = responseState.data !== undefined && responseState.data.result.days_active\r\n    const hearts = responseState.data !== undefined && responseState.data.result.campaign_hearts\r\n    let isCharity = responseState.data !== undefined && responseState.data.result.is_charity\r\n    if (isCharity === \"FALSE\") {isCharity = \"No\"} else {isCharity = \"Yes\"}\r\n    const description = responseState.data !== undefined && responseState.data.result.description\r\n    const goal = (responseState.data !== undefined && (responseState.data.result.goal))\r\n    const currentAmount = (responseState.data !== undefined && (responseState.data.result.current_amount))\r\n    let state = (responseState.data !== undefined && (responseState.data.result.state))\r\n    if (state === \"active\") {state = \"Active\"} else {state = \"Inactive\"}\r\n\r\n    const progress = (parseFloat((currentAmount / goal)) * 100).toFixed(2)\r\n\r\n    return (\r\n        <Container>\r\n            <Row key={campaign_id}>\r\n                <Col md=\"4\">\r\n                    <Card>\r\n                        <br />\r\n                        <Card.Img variant=\"top\" src={url} />\r\n                        <Card.Body>\r\n\r\n                            <h4 style={{color:\"green\"}}>Goal: ${goal} {currency}</h4>\r\n                            <h4>Current Amount: ${currentAmount}</h4>\r\n                            <h6>Progress:</h6>\r\n                            <ProgressBar style={{ height: \"40px\" }} now={progress} label={`${progress}%`} />\r\n                            <br />\r\n                            <h5># of Donators: {donators}</h5>\r\n                            <h5># of Days Active: {daysActive}</h5>\r\n                            <h5># of Campaign Hearts: {hearts}</h5>\r\n                            <h5>Social Share Total: {ssTotal}</h5>\r\n                            <h5>Is Charity: {isCharity}</h5>\r\n                            <h5>State: {state}</h5>\r\n                            <br />\r\n                            <Link to=\"/analysts\" className=\"btn btn-large btn-primary\">Back To Search</Link>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n\r\n\r\n                <Col md=\"8\">\r\n                    <h2 style={{ marginTop: \"5%\" }}>{title}</h2>\r\n                    <p>{description}</p>\r\n                </Col>\r\n            </Row>\r\n\r\n        </Container>\r\n    );\r\n}","import React from \"react\";\r\nimport { Container, Col, Row } from \"react-bootstrap\"\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport Top from './Top.js'\r\nimport Home from \"./Home\"\r\nimport About from \"./About\"\r\nimport Help from \"./Help\"\r\nimport Creators from \"./Creators\"\r\nimport Analysts from \"./Analysts\"\r\nimport Home2 from './Home2'\r\nimport CampaignDetail from './CampaignDetail'\r\n\r\nexport default function App(props) {\r\n  return (\r\n    <Router>\r\n      <Container fluid className=\"p-0 min-vh-100 d-flex flex-column\">\r\n        <Row nogutters=\"true\" className=\"flex-grow-0 flex-shrink-0\">\r\n          <Col nogutters=\"true\" className=\"px-3 py-2\" style={{ backgroundColor: \"black\"}}>\r\n            <Top />\r\n          </Col>\r\n        </Row>\r\n        <Row nogutters=\"true\" className=\"flex-grow-1\">\r\n          <Col md=\"12\" > \r\n            <Switch>\r\n            <Route path=\"/creators\">\r\n                <Creators />\r\n              </Route>\r\n              <Route path=\"/analysts\">\r\n                <Analysts />\r\n              </Route>\r\n              <Route path=\"/campaign\">\r\n                <CampaignDetail />\r\n              </Route>\r\n              <Route path=\"/about\">\r\n                <About />\r\n              </Route>\r\n              <Route path=\"/help\">\r\n                <Help />\r\n              </Route>\r\n              <Route path=\"/\">\r\n                <Home />\r\n                <Home2 />\r\n              </Route>\r\n            </Switch>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Router>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport AppContext from './context'\r\nimport App from './App'\r\n\r\n/** The context provider for our app */\r\nexport default class AppProvider extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.actions = {\r\n            addToCart: this.addToCart,\r\n            removeFromCart: this.removeFromCart,\r\n            getCartTotal: this.getCartTotal,\r\n            clearCart: this.clearCart,\r\n        }\r\n        this.state = {\r\n            categories: {},\r\n            products: {},\r\n            cart: {}\r\n        }\r\n        //do not load categories here\r\n    }\r\n\r\n    \r\n\r\n    async componentDidMount() {\r\n\r\n        //const resp = await axios.post('http://localhost:8000/api/campaign', match.params.id).then((response))\r\n        \r\n        \r\n        // const cats = {}\r\n        // for (const c of resp.data) {\r\n        //     cats[c.id] = c\r\n        // }\r\n\r\n        // const prodWID = {}\r\n        // for (const p of prods.data) {\r\n        //     prodWID[p.id] = p\r\n        // }\r\n\r\n\r\n        // this.setState({\r\n        //     categories: cats,\r\n        //     products: prodWID\r\n        // })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <AppContext.Provider value={{...this.state, ...this.actions}}>\r\n                <App />\r\n            </AppContext.Provider>\r\n        )\r\n    }\r\n\r\n    \r\n\r\n }\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport '@fortawesome/fontawesome-free/css/all.css'\r\n//import App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n//import AppContext from './context'\r\nimport AppProvider from './context-provider'\r\n\r\nReactDOM.render(<AppProvider />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/gsLogo.f79b1f15.png\";"],"sourceRoot":""}